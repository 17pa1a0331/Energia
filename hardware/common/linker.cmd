/*
 * This file was generated by linkcmd_gnu.xdt from the 
 * ti.platforms.tink2 package.
 */

__STACK_SIZE = 0x400;
__TI_STACK_SIZE = __STACK_SIZE;

INPUT(
    configPkg/package/cfg/energia_pm4g.om4g
    src/tink2/Board_init.obj
    ti/drivers/lib/drivers_ccware.am4g
    ti/sysbios/fatfs/lib/release/ti.sysbios.fatfs.am4g
    src/sysbios/sysbios.am4g
/*    tink/runtime/wiring/lib/tink.runtime.wiring.lib */
    gnu/targets/arm/rtsv7M/lib/gnu.targets.arm.rtsv7M.am4g
    gnu/targets/arm/rtsv7M/lib/boot.am4g
    gnu/targets/arm/rtsv7M/lib/syscalls.am4g
)

/*
 * symbolic aliases for static instance objects
 */
xdc_runtime_Startup__EXECFXN__C = 1;
xdc_runtime_Startup__RESETFXN__C = 1;
TSK_idle = ti_sysbios_knl_Task_Object__table__V + 0;

INCLUDE "cc3200.lds"

SECTIONS {
        .bootVecs (DSECT) : {*(.bootVecs)} 
    xdc.meta (COPY) : {KEEP(*(xdc.meta))}  > REGION_TEXT
    xdc.noload (COPY) : {KEEP(*(xdc.noload))}  > REGION_TEXT


    /*
     * Linker command file contributions from all loaded packages:
     */
    
/* Content from ti.sysbios.family.arm (ti/sysbios/family/arm/linkcmd.xdt): */

/* Content from ti.sysbios.rts (ti/sysbios/rts/linkcmd.xdt): */

/* Content from ti.sysbios.family.arm.m3 (ti/sysbios/family/arm/m3/linkcmd.xdt): */
    _intvecs_base_address = 536887296;
ti_sysbios_family_arm_m3_Hwi_nvic = 0xe000e000;

/* Content from ti.sysbios.family.arm.cc32xx (ti/sysbios/family/arm/cc32xx/linkcmd.xdt): */


    __TI_STACK_BASE = __stack;
}

SECTIONS {
    /* create an empty section at the end of SRAM */
    .empty : { *(.empty) } > SRAM

    /* the UNUSED symbols define reusable heap memory */
    __UNUSED_start__ = ADDR(.empty);
    __UNUSED_end__   = ORIGIN(SRAM) + LENGTH(SRAM);

    /* HACK: workaround bug in (xdctargets-h39) gnu.targets linker support */
    xdc.meta   0x0 (COPY): {KEEP(*(xdc.meta))}
    xdc.noload 0x0 (COPY): {KEEP(*(xdc.noload))}
}

ENTRY(_c_int00)

/* function aliases */
xdc_runtime_System_asprintf_va__E = xdc_runtime_System_asprintf_va__F;
xdc_runtime_System_snprintf_va__E = xdc_runtime_System_snprintf_va__F;
xdc_runtime_System_printf_va__E = xdc_runtime_System_printf_va__F;
xdc_runtime_System_aprintf_va__E = xdc_runtime_System_aprintf_va__F;
xdc_runtime_System_sprintf_va__E = xdc_runtime_System_sprintf_va__F;
