/*
 *  ======== package.bld ========
 */
var Platform = xdc.module("ti.platforms.tink2.Platform");
var SDKROOT = Platform.findCC3200SDK();
print("  using CC3200 SDK: " + SDKROOT);

Pkg.attrs.profile = "release";
Pkg.attrs.exportAll = true;

var CCOPTS = "--gcc --diag_warning=225";

var DEFS = "-DPART_CC3200 -Dcc3200 -DCCWARE -DSL_FULL -DSL_PLATFORM_MULTI_THREADED";

INCS = '-I"' + SDKROOT + '" '
       + '-I"' + SDKROOT + '/driverlib" '
       + '-I"' + SDKROOT + '/inc" '
       + '-I"' + SDKROOT + '/oslib" '
       + '-I"' + SDKROOT + '/simplelink/include" ';

SRCS = getSources(".");

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];
    var lib = Pkg.addLibrary("lib/" + Pkg.name, targ, {
				 incs: INCS,
				 defs: DEFS,
                                 copts: CCOPTS,
                                 suffix: ".lib"
			     });
    lib.addObjects(SRCS);
}

function getSources(dir)
{
    var result = [];
    var list = java.io.File(dir).list();
    for (var i = 0; i < list.length; i++) {
        var file = String(list[i]);
        if (file.match(/\.c$|\.cpp$/)) {
	    result.push(file);
	}
    }
    return (result);
}
